create folder inside theme folder called myGallery
copy in the /files to myGallery


** NOTE THAT IF YOU ARE USING A CHILD THEME YOU WILL NEED TO CHANGE ALL THE PATHS **
EG  -> '../../18-tags-child/myGallery/gallery_header_include.php'
add a link to the css files (lightbox.css and gallery.css
paste- > <?php include (TEMPLATEPATH . '/myGallery/gallery_header_include.php'); ?>
to the header.php just before the </head>

register & enque scripts
paste contents of register-javascripts.txt into the gallery-functions-include.php

paste the following into functions.php to include the javascript that we just registered
<?php include (TEMPLATEPATH . '/myGallery/gallery_functions_include.php'); ?>

At this point check that the lighbox & gallery .css and .js files are being loaded into the head of the webpage

Also - > check that gallery.js is loading properly by writing a simple jQuery alert 

Style the galery in gallery.css -> add some padding or change the size of the images

Add the lightbox functionality to gallery.js -> 

jQuery(document).ready(function(){
    
 //alert("script is working");
    
    jQuery('.gallery a').each(function(){
        
         jQuery(this).attr('data-lightbox', 'slideshow');
        
    });
    
    
});

Here are some extra lines that we could add if we want to display the caption text with the lightbox image -> 
 var captionText = jQuery(this).closest('.gallery-item').find('.wp-caption-text').html();
        
         jQuery(this).attr({'data-lightbox': 'slideshow', 'title' : captionText });
         
*********************************************************************************************************************************
Lets take this to the next level and overwrite the WP gallery code with our own.

<!--  Add this to the gallery-functions-include.php -- It adds a class of myGalleryItem and a span for the caption-->

<?php

	//deactivate WordPress function
	remove_shortcode('gallery', 'gallery_shortcode');
	
	//activate our custom code function (below)
	add_shortcode('gallery', 'mygallery_shortcode');
	
	
	//gallery shortcode  >>  copied and modified from wp-includes/media.php
	function mygallery_shortcode($attr) {
		$post = get_post();
	
		static $instance = 0;
		$instance++;
	
		if ( ! empty( $attr['ids'] ) ) {
			// 'ids' is explicitly ordered, unless you specify otherwise.
			if ( empty( $attr['orderby'] ) )
				$attr['orderby'] = 'post__in';
			$attr['include'] = $attr['ids'];
		}
	
		// Allow plugins/themes to override the default gallery template.
		$output = apply_filters('post_gallery', '', $attr);
		if ( $output != '' )
			return $output;
	
		// We're trusting author input, so let's at least make sure it looks like a valid orderby statement
		if ( isset( $attr['orderby'] ) ) {
			$attr['orderby'] = sanitize_sql_orderby( $attr['orderby'] );
			if ( !$attr['orderby'] )
				unset( $attr['orderby'] );
		}
	
		extract(shortcode_atts(array(
			'order'      => 'ASC',
			'orderby'    => 'menu_order ID',
			'id'         => $post ? $post->ID : 0,
			'size'       => 'thumbnail',
			'include'    => '',
			'exclude'    => '',
			'link'       => ''
		), $attr, 'gallery'));
	
		$id = intval($id);
		if ( 'RAND' == $order )
			$orderby = 'none';
	
		if ( !empty($include) ) {
			$_attachments = get_posts( array('include' => $include, 'post_status' => 'inherit', 'post_type' => 'attachment', 'post_mime_type' => 'image', 'order' => $order, 'orderby' => $orderby) );
	
			$attachments = array();
			foreach ( $_attachments as $key => $val ) {
				$attachments[$val->ID] = $_attachments[$key];
			}
		} elseif ( !empty($exclude) ) {
			$attachments = get_children( array('post_parent' => $id, 'exclude' => $exclude, 'post_status' => 'inherit', 'post_type' => 'attachment', 'post_mime_type' => 'image', 'order' => $order, 'orderby' => $orderby) );
		} else {
			$attachments = get_children( array('post_parent' => $id, 'post_status' => 'inherit', 'post_type' => 'attachment', 'post_mime_type' => 'image', 'order' => $order, 'orderby' => $orderby) );
		}
	
		if ( empty($attachments) )
			return '';
	
		if ( is_feed() ) {
			$output = "\n";
			foreach ( $attachments as $att_id => $attachment )
				$output .= wp_get_attachment_link($att_id, $size, true) . "\n";
			return $output;
		}
	
		$valid_tags = wp_kses_allowed_html( 'post' );
	
		if ( apply_filters( 'use_default_gallery_style', true ) )
			
		$size_class = sanitize_html_class( $size );
		$gallery_div = "<div id='gallery-{$instance}' class='gallery galleryid-{$id} '>";
	
		$output = apply_filters( 'gallery_style', '' . "\n\t\t" . $gallery_div );
		
		foreach ( $attachments as $id => $attachment ) {
			
			if ( ! empty( $link ) && 'file' === $link )
				$image_output = wp_get_attachment_link( $id, $size, false, false );
			elseif ( ! empty( $link ) && 'none' === $link )
				$image_output = wp_get_attachment_image( $id, $size, false );
			else
				$image_output = wp_get_attachment_link( $id, $size, true, false );
	
			$output .= '<div class="myGalleryItem">'.$image_output.'<span>'.wptexturize($attachment->post_excerpt).'</span></div>';	
			
		}
		
		return $output;

	}


?>

----------------> Next we need to change the gallery.css

.gallery .myGalleryItem img {
    width : 250px;
    height:250px;
    
    
}
.gallery .myGalleryItem{
display : inline-block;
    padding: 0px 20px 20px 0px;
}
.myGalleryItem  span {
    display: none;
}

------------------> Fiinally change the gallery.js

jQuery(document).ready(function(){
    
 //alert("script is working");
    
    jQuery('.gallery a').each(function(){
        
        var captionText = jQuery(this).parent().find('span').html();
        
         jQuery(this).attr({'data-lightbox': 'slideshow', 'title' : captionText });
        
    });
    
    
});




